}
invest <- invest[(n+1):length(invest[,1]),] #izbrišem prvih n vrstic, kjer ni izračuna
#write.csv2(invest,file="C:/zan/faks/opb/ODP/invest.csv") #tabela povprečnih sharpovih vrednosti desetih prejšnjih dni
#prikažem samo tiste sharpove, pri katerih trejdam
trade <- invest[seq(1, length(invest[,1]), n), ]
trade[is.na(trade)] <- -Inf #tiste, ki še ne kotirajo, sem dal na -inf, da jih prikaže na zadnjem mestu po velikosti sharpa
trade <- trade[,-length(trade[1,])] #izbrišem benchmark
#razpredelnica, kam naj investiram v določenih datumih
for (i in 1:length(trade[,1])) {
trade[i,4:length(trade[1,])] <- colnames(tail(sort(trade[i,4:length(trade[1,])])))
}
colnames(trade) <- c("leto", "mesec", "dan", seq(length(trade[1,])-3, 1, -1))
trade <- trade[,c(1,2,3,length(trade[1,]):4)] #tak vrstni red, kot hočem - 1 pomeni največji sharpov
View(trade)
delez <- seq(1/n,1, 1/n) #da bomo vzeli tehtano povprečje sharpov z večjo težo na čim kasnejših sharpih
View(trade)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
View(trade)
View(invest)
View(sharp)
invest[length(invest[,1]),]
View(sharp)
View(sharp)
View(invest)
n <- 10
delez <- seq(1/n,1, 1/n) #da bomo vzeli tehtano povprečje sharpov z večjo težo na čim kasnejših sharpih
invest <- sharp
invest[is.na(invest)] <- 0
for (j in 4:(length(sharp[1,])-1)) { #do -1, ker zadnji stolpec je benchmark!
k <- 1
while (invest[k,j] == 0) { #začnemo pri tistem k-ju, ko delnica začne kotirati na borzi
k <- k+1
}
for (i in (k+n):length(sharp[,1])) {
invest[i,j] <- mean(sharp[(i-(n-1)):i,j]*delez)
}
for (i in 1:(k+n-1)) {invest[i,j] <- NA}
}
invest <- invest[(n+1):length(invest[,1]),] #izbrišem prvih n vrstic, kjer ni izračuna
#write.csv2(invest,file="C:/zan/faks/opb/ODP/invest.csv") #tabela povprečnih sharpovih vrednosti desetih prejšnjih dni
#prikažem samo tiste sharpove, pri katerih trejdam
trade <- invest[seq(1, length(invest[,1]), n), ]
trade[is.na(trade)] <- -Inf #tiste, ki še ne kotirajo, sem dal na -inf, da jih prikaže na zadnjem mestu po velikosti sharpa
trade <- trade[,-length(trade[1,])] #izbrišem benchmark
#razpredelnica, kam naj investiram v določenih datumih
for (i in 1:length(trade[,1])) {
trade[i,4:length(trade[1,])] <- colnames(tail(sort(trade[i,4:length(trade[1,])])))
}
colnames(trade) <- c("leto", "mesec", "dan", seq(length(trade[1,])-3, 1, -1))
trade <- trade[,c(1,2,3,length(trade[1,]):4)] #tak vrstni red, kot hočem - 1 pomeni največji sharpov
#write.csv2(trade,file="C:/zan/faks/opb/ODP/trade.csv") #tabela delnic, ki padajo po sh
View(trade)
View(trade)
View(invest)
View(trade)
delnice$(trade[4,1])
(trade[4,1])
trade[4,1]
trade[1,4]
delnice$(trade[1,4])
delnice$trade[1,4]
trade[1,4]
delnice$odfl
delnice$"odfl"
delnice[1,odfl]
delnice[1,"odfl""]
delnice[1,"odfl"]
delnice[2,"odfl"]
delnice[2,trade[1,4]]
delnice[,trade[1,4]]
trade[,4]
rownames(trade[,1])
rownames(trade[,2])
rownames(trade[1,])
rownames(trade[,4])
delnice <- read.csv2(file="C:/zan/faks/opb/ODP/proba.csv", header = TRUE, fileEncoding = "Windows-1250")
rownames(delnice)<- delnice[,1]
delnice[,1] <- NULL
######benchmark mora biti na zadnjem mestu pri vnašanju tickerjev!!!!
#vse NA-je nadomestim z 0 (problem bo, če kje vmes NA, sepravi da ob določenem datumu ne bo podatka -
#UPAM DA TO NI MOŽNO!!! - DRUGAČE TREBA NAREDITI ŠE ENO ZANKO KI JE POMOJE DOST ZAJEBANA) - V DRUGI R KODI JE NAREJENA ZANKA DELNO
delnice[is.na(delnice)] <- 0
#spremenim datum v tri stolpce z letom, mesecem in dnevom
delnice <- cbind(dan = substr(row.names(delnice), 9, 10), delnice)
delnice <- cbind(mesec = substr(row.names(delnice), 6, 7), delnice)
delnice <- cbind(leto = substr(row.names(delnice), 1, 4), delnice)
#delnice <- cbind(indeks = c(1:length(delnice[,1])), delnice)
#zbriše prvo vrstico, kjer so bili prej datumi so zdaj rownames kar indeksi
rownames(delnice) <- c(1:length(delnice[,1]))
cene <- delnice
View(cene)
strategija1 <- trade[,4]
strategija1
cene[2,trade[1,4]]
length(cene)
length(cene[1,])
length(cene[,1])
length(trade[,1])
dan+n
dnevi+n
cene[101,]
cene[101,"odfl"]
ceiling(4.3)
floor(4.3)
trade[1,4]
for (i in 1:floor(length(cene[,1])-(dnevi+n))/n) { #toliko bo izpisanih dni investiranja
cene[dnevi+n+1+n*(i-1),trade[dnevi+n+1+n*(i-1),4]]
}
View(cene)
for (i in 1:floor(length(cene[,1])-(dnevi+n))/n) { #toliko bo izpisanih dni investiranja
print(cene[dnevi+n+1+n*(i-1),trade[dnevi+n+1+n*(i-1),4]])
}
trade[dnevi+n+1+n*(2-1),4]
trade[dnevi+n+1+n*(1-1),4]
trade[1,4]
strategija1 <- trade[,4]
for (i in 1:floor(length(cene[,1])-(dnevi+n))/n) { #toliko bo izpisanih dni investiranja
print(cene[dnevi+n+1+n*(i-1),trade[i,4]])
}
cene[dnevi+n+1+n*(1-1),trade[i,4]]
cene[dnevi+n+1+n*(1-1),trade[1,4]]
i
cene[dnevi+n+1+n*1,trade[1,4]]-cene[dnevi+n+1+n*(1-1),trade[1,4]]
for (i in 1:floor(length(cene[,1])-(dnevi+n))/n) { #toliko bo izpisanih dni investiranja
print((cene[dnevi+n+1+n*i,trade[i,4]]-cene[dnevi+n+1+n*(i-1),trade[i,4]])/cene[dnevi+n+1+n*(i-1),trade[i,4]])
}
cene[dnevi+n+1+n*1,trade[1,4]]-cene[dnevi+n+1+n*(1-1),trade[1,4]])/cene[dnevi+n+1+n*(1-1),trade[1,4]]
(cene[dnevi+n+1+n*1,trade[1,4]]-cene[dnevi+n+1+n*(1-1),trade[1,4]])/cene[dnevi+n+1+n*(1-1),trade[1,4]]
for (i in 1:5) { #toliko bo izpisanih dni investiranja
print((cene[dnevi+n+1+n*i,trade[i,4]]-cene[dnevi+n+1+n*(i-1),trade[i,4]])/cene[dnevi+n+1+n*(i-1),trade[i,4]])
}
for (i in 1:length(trade[,1])) { #toliko bo izpisanih dni investiranja
print((cene[dnevi+n+1+n*i,trade[i,4]]-cene[dnevi+n+1+n*(i-1),trade[i,4]])/cene[dnevi+n+1+n*(i-1),trade[i,4]])
}
for (i in 1:length(trade[,1])-1) { #toliko bo izpisanih dni investiranja
print((cene[dnevi+n+1+n*i,trade[i,4]]-cene[dnevi+n+1+n*(i-1),trade[i,4]])/cene[dnevi+n+1+n*(i-1),trade[i,4]])
}
for (i in 1:(length(trade[,1])-1)) { #toliko bo izpisanih dni investiranja
print((cene[dnevi+n+1+n*i,trade[i,4]]-cene[dnevi+n+1+n*(i-1),trade[i,4]])/cene[dnevi+n+1+n*(i-1),trade[i,4]])
}
rownames(trade[,1])
rownames(trade[1,])
rownames(trade[,])
for (i in 1:length(trade[,1])) {
print(rownames(trade[i,]), trade[i,4])
}
for (i in 1:length(trade[,1])) {
print(rownames(trade[i,]); trade[i,4])
}
for (i in 1:length(trade[,1])) {
print(rownames(trade[i,]))
print(trade[i,4])
}
for (i in 1:length(trade[,1])) {
print(c(rownames(trade[i,]), print(trade[i,4])))
}
for (i in 1:length(trade[,1])) {
print(c(rownames(trade[i,]), trade[i,4]))
}
for (i in 1:length(trade[,1])) {
strategija1 <- c(rownames(trade[i,]), trade[i,4])
}
strategija1
for (i in 1:length(trade[,1])) {
strategija1 <- c(rownames(trade[i,]), trade[i,4])
}
strategija1
strategija1 <- ()
strategija1 <- c()
strategija1
for (i in 1:length(trade[,1])) {
strategija1 <- append(strategija1, c(rownames(trade[i,]), trade[i,4]))
}
strategija1
indeks <- c()
ticker <- c()
for (i in 1:length(trade[,1])) {
indeks <- append(indeks,rownames(trade[i,]))
ticker <- append(ticker, trade[i,4])
}
indeks
ticker
View(trade[-(1:3),])
View(trade[-1,])
View(trade[-1])
View(trade[-(1:3)])
View(trade(trade[-(1:3)][-(6:length(trade[1,]))]))
View(trade[trade[-(1:3)][-(6:length(trade[1,]))]])
proba <- (trade[-(1:3)])
View(proba)
proba <- proba[-(6:length(proba[1,]))]
View(proba)
trade[1,4]
View(proba)
rownames(proba[1,1])
rownames(proba[,1])
rownames(proba[1,])
cene[rownames(proba[1,]),proba[1,1]]
cene[rownames(proba[2,]),proba[2,1]]
proba[2,1]
proba[3,1]
cene[rownames(proba[3,]),proba[3,1]]
rownames(proba[1,])
rownames(proba[1,])-1
cene[dnevi+n+1+n*(1),proba[1,1]]-cene[dnevi+n+1+n*(1-1),proba[1,1]]
cene[dnevi+n+1+n*(3),proba[3,1]]-cene[dnevi+n+1+n*(3-1),proba[3,1]]
dnevi+n+1+n*(3)
20.32-18.37
for (i in 1:length(proba[,1])) {
print((cene[dnevi+n+1+n*(i),proba[i,1]]-cene[dnevi+n+1+n*(i-1),proba[i,1]])/cene[dnevi+n+1+n*(i-1),proba[i,1]])
}
for (i in 1:(length(proba[,1])-1)) {
print((cene[dnevi+n+1+n*(i),proba[i,1]]-cene[dnevi+n+1+n*(i-1),proba[i,1]])/cene[dnevi+n+1+n*(i-1),proba[i,1]])
}
profit <- 0
for (i in 1:(length(proba[,1])-1)) {
profit <- profit + ((cene[dnevi+n+1+n*(i),proba[i,1]]-cene[dnevi+n+1+n*(i-1),proba[i,1]])/cene[dnevi+n+1+n*(i-1),proba[i,1]])
}
profit
View(proba)
profit1 <- 0
for (j in 1:length(proba[1,])) {
for (i in 1:(length(proba[,1])-1)) {
profit1 <- profit + ((cene[dnevi+n+1+n*(i),proba[i,j]]-cene[dnevi+n+1+n*(i-1),proba[i,j]])/cene[dnevi+n+1+n*(i-1),proba[i,j]])
}
}
profit1
profit.skupen <- 0
profit1 <- 0
profit2 <- 0
profit3 <- 0
profit4 <- 0
profit5 <- 0
for (i in 1:(length(proba[,1])-1)) {
profit1 <- profit1 + ((cene[dnevi+n+1+n*(i),proba[i,1]]-cene[dnevi+n+1+n*(i-1),proba[i,1]])/cene[dnevi+n+1+n*(i-1),proba[i,1]])
}
for (i in 1:(length(proba[,1])-1)) {
profit2 <- profit2 + ((cene[dnevi+n+1+n*(i),proba[i,2]]-cene[dnevi+n+1+n*(i-1),proba[i,2]])/cene[dnevi+n+1+n*(i-1),proba[i,2]])
}
for (i in 1:(length(proba[,1])-1)) {
profit3 <- profit3 + ((cene[dnevi+n+1+n*(i),proba[i,3]]-cene[dnevi+n+1+n*(i-1),proba[i,3]])/cene[dnevi+n+1+n*(i-1),proba[i,3]])
}
for (i in 1:(length(proba[,1])-1)) {
profit4<- profit4 + ((cene[dnevi+n+1+n*(i),proba[i,4]]-cene[dnevi+n+1+n*(i-1),proba[i,4]])/cene[dnevi+n+1+n*(i-1),proba[i,4]])
}
for (i in 1:(length(proba[,1])-1)) {
profit5 <- profit5 + ((cene[dnevi+n+1+n*(i),proba[i,5]]-cene[dnevi+n+1+n*(i-1),proba[i,5]])/cene[dnevi+n+1+n*(i-1),proba[i,5]])
profit1 <- 0
profit2 <- 0
profit3 <- 0
profit4 <- 0
profit5 <- 0
for (i in 1:(length(proba[,1])-1)) {
profit1 <- profit1 + ((cene[dnevi+n+1+n*(i),proba[i,1]]-cene[dnevi+n+1+n*(i-1),proba[i,1]])/cene[dnevi+n+1+n*(i-1),proba[i,1]])
}
for (i in 1:(length(proba[,1])-1)) {
profit2 <- profit2 + ((cene[dnevi+n+1+n*(i),proba[i,2]]-cene[dnevi+n+1+n*(i-1),proba[i,2]])/cene[dnevi+n+1+n*(i-1),proba[i,2]])
}
for (i in 1:(length(proba[,1])-1)) {
profit3 <- profit3 + ((cene[dnevi+n+1+n*(i),proba[i,3]]-cene[dnevi+n+1+n*(i-1),proba[i,3]])/cene[dnevi+n+1+n*(i-1),proba[i,3]])
}
for (i in 1:(length(proba[,1])-1)) {
profit4<- profit4 + ((cene[dnevi+n+1+n*(i),proba[i,4]]-cene[dnevi+n+1+n*(i-1),proba[i,4]])/cene[dnevi+n+1+n*(i-1),proba[i,4]])
}
for (i in 1:(length(proba[,1])-1)) {
profit5 <- profit5 + ((cene[dnevi+n+1+n*(i),proba[i,5]]-cene[dnevi+n+1+n*(i-1),proba[i,5]])/cene[dnevi+n+1+n*(i-1),proba[i,5]])
}
profit1
profit2
profit3
profit4
profit5
mean(profit1, profit2, profit3, profit4, profit5)
profit1 <- 0
for (i in 1:(length(proba[,1])-1)) {
profit1 <- profit1 * ((cene[dnevi+n+1+n*(i),proba[i,1]]-cene[dnevi+n+1+n*(i-1),proba[i,1]])/cene[dnevi+n+1+n*(i-1),proba[i,1]])+1
}
profit1
profit1 <- 0
profit2 <- 0
profit3 <- 0
profit4 <- 0
profit5 <- 0
for (i in 1:(length(proba[,1])-1)) {
profit1 <- profit1 * ((cene[dnevi+n+1+n*(i),proba[i,1]]-cene[dnevi+n+1+n*(i-1),proba[i,1]])/cene[dnevi+n+1+n*(i-1),proba[i,1]])+1
}
for (i in 1:(length(proba[,1])-1)) {
profit2 <- profit2 * ((cene[dnevi+n+1+n*(i),proba[i,2]]-cene[dnevi+n+1+n*(i-1),proba[i,2]])/cene[dnevi+n+1+n*(i-1),proba[i,2]])+1
}
for (i in 1:(length(proba[,1])-1)) {
profit3 <- profit3 * ((cene[dnevi+n+1+n*(i),proba[i,3]]-cene[dnevi+n+1+n*(i-1),proba[i,3]])/cene[dnevi+n+1+n*(i-1),proba[i,3]])+1
}
for (i in 1:(length(proba[,1])-1)) {
profit4<- profit4 *((cene[dnevi+n+1+n*(i),proba[i,4]]-cene[dnevi+n+1+n*(i-1),proba[i,4]])/cene[dnevi+n+1+n*(i-1),proba[i,4]])+1
}
for (i in 1:(length(proba[,1])-1)) {
profit5 <- profit5 * ((cene[dnevi+n+1+n*(i),proba[i,5]]-cene[dnevi+n+1+n*(i-1),proba[i,5]])/cene[dnevi+n+1+n*(i-1),proba[i,5]])+1
}
profit1
profit2
profit3
profit4
profit5
n <- 252
delez <- seq(1/n,1, 1/n) #da bomo vzeli tehtano povprečje sharpov z večjo težo na čim kasnejših sharpih
invest <- sharp
invest[is.na(invest)] <- 0
for (j in 4:(length(sharp[1,])-1)) { #do -1, ker zadnji stolpec je benchmark!
k <- 1
while (invest[k,j] == 0) { #začnemo pri tistem k-ju, ko delnica začne kotirati na borzi
k <- k+1
}
for (i in (k+n):length(sharp[,1])) {
invest[i,j] <- mean(sharp[(i-(n-1)):i,j]*delez)
}
for (i in 1:(k+n-1)) {invest[i,j] <- NA}
}
invest <- invest[(n+1):length(invest[,1]),] #izbrišem prvih n vrstic, kjer ni izračuna
#write.csv2(invest,file="C:/zan/faks/opb/ODP/invest.csv") #tabela povprečnih sharpovih vrednosti desetih prejšnjih dni
#prikažem samo tiste sharpove, pri katerih trejdam
trade <- invest[seq(1, length(invest[,1]), n), ]
trade[is.na(trade)] <- -Inf #tiste, ki še ne kotirajo, sem dal na -inf, da jih prikaže na zadnjem mestu po velikosti sharpa
trade <- trade[,-length(trade[1,])] #izbrišem benchmark
#razpredelnica, kam naj investiram v določenih datumih
for (i in 1:length(trade[,1])) {
trade[i,4:length(trade[1,])] <- colnames(tail(sort(trade[i,4:length(trade[1,])])))
}
colnames(trade) <- c("leto", "mesec", "dan", seq(length(trade[1,])-3, 1, -1))
trade <- trade[,c(1,2,3,length(trade[1,]):4)] #tak vrstni red, kot hočem - 1 pomeni največji sharpov
#write.csv2(trade,file="C:/zan/faks/opb/ODP/trade.csv") #tabela delnic, ki padajo po sharpovih vrednostih
#lahko bi še pogledal, kakšne standardne odklone imajo sharpove in ali je trend naraščanja/padanja...
#plot(rownames(sharp), sharp[,8], type="l")
#profit, če investiramo vsako obdobje v 5 delnic z najvišjim sharpom
proba <- (trade[-(1:3)])
proba <- proba[-(6:length(proba[1,]))] #investiramo v 5 delnic
profit.skupen <- 0
for (j in 1:length(proba[1,])) {
for (i in 1:(length(proba[,1])-1)) {
profit.skupen <- profit.skupen + ((cene[dnevi+n+1+n*(i),proba[i,j]]-cene[dnevi+n+1+n*(i-1),proba[i,j]])/cene[dnevi+n+1+n*(i-1),proba[i,j]])
}
}
#profiti vsake strategije posebej (profit(i) označuje profit, če investiramo v i-to sharpovo največjo delnico)
profit1 <- 0
profit2 <- 0
profit3 <- 0
profit4 <- 0
profit5 <- 0
for (i in 1:(length(proba[,1])-1)) {
profit1 <- profit1 * ((cene[dnevi+n+1+n*(i),proba[i,1]]-cene[dnevi+n+1+n*(i-1),proba[i,1]])/cene[dnevi+n+1+n*(i-1),proba[i,1]])+1
}
for (i in 1:(length(proba[,1])-1)) {
profit2 <- profit2 * ((cene[dnevi+n+1+n*(i),proba[i,2]]-cene[dnevi+n+1+n*(i-1),proba[i,2]])/cene[dnevi+n+1+n*(i-1),proba[i,2]])+1
}
for (i in 1:(length(proba[,1])-1)) {
profit3 <- profit3 * ((cene[dnevi+n+1+n*(i),proba[i,3]]-cene[dnevi+n+1+n*(i-1),proba[i,3]])/cene[dnevi+n+1+n*(i-1),proba[i,3]])+1
}
for (i in 1:(length(proba[,1])-1)) {
profit4<- profit4 *((cene[dnevi+n+1+n*(i),proba[i,4]]-cene[dnevi+n+1+n*(i-1),proba[i,4]])/cene[dnevi+n+1+n*(i-1),proba[i,4]])+1
}
for (i in 1:(length(proba[,1])-1)) {
profit5 <- profit5 * ((cene[dnevi+n+1+n*(i),proba[i,5]]-cene[dnevi+n+1+n*(i-1),proba[i,5]])/cene[dnevi+n+1+n*(i-1),proba[i,5]])+1
}
profit.skupen
profit1
profit2
profit3
profit4
profit5
profit.skupen <- 0
for (j in 1:length(proba[1,])) {
for (i in 1:(length(proba[,1])-1)) {
profit.skupen <- profit.skupen * ((cene[dnevi+n+1+n*(i),proba[i,j]]-cene[dnevi+n+1+n*(i-1),proba[i,j]])/cene[dnevi+n+1+n*(i-1),proba[i,j]])+1
}
}
profit.skupen
n <- 3
delez <- seq(1/n,1, 1/n) #da bomo vzeli tehtano povprečje sharpov z večjo težo na čim kasnejših sharpih
invest <- sharp
invest[is.na(invest)] <- 0
for (j in 4:(length(sharp[1,])-1)) { #do -1, ker zadnji stolpec je benchmark!
k <- 1
while (invest[k,j] == 0) { #začnemo pri tistem k-ju, ko delnica začne kotirati na borzi
k <- k+1
}
for (i in (k+n):length(sharp[,1])) {
invest[i,j] <- mean(sharp[(i-(n-1)):i,j]*delez)
}
for (i in 1:(k+n-1)) {invest[i,j] <- NA}
}
invest <- invest[(n+1):length(invest[,1]),] #izbrišem prvih n vrstic, kjer ni izračuna
#write.csv2(invest,file="C:/zan/faks/opb/ODP/invest.csv") #tabela povprečnih sharpovih vrednosti desetih prejšnjih dni
#prikažem samo tiste sharpove, pri katerih trejdam
trade <- invest[seq(1, length(invest[,1]), n), ]
trade[is.na(trade)] <- -Inf #tiste, ki še ne kotirajo, sem dal na -inf, da jih prikaže na zadnjem mestu po velikosti sharpa
trade <- trade[,-length(trade[1,])] #izbrišem benchmark
#razpredelnica, kam naj investiram v določenih datumih
for (i in 1:length(trade[,1])) {
trade[i,4:length(trade[1,])] <- colnames(tail(sort(trade[i,4:length(trade[1,])])))
}
colnames(trade) <- c("leto", "mesec", "dan", seq(length(trade[1,])-3, 1, -1))
trade <- trade[,c(1,2,3,length(trade[1,]):4)] #tak vrstni red, kot hočem - 1 pomeni največji sharpov
#write.csv2(trade,file="C:/zan/faks/opb/ODP/trade.csv") #tabela delnic, ki padajo po sharpovih vrednostih
#lahko bi še pogledal, kakšne standardne odklone imajo sharpove in ali je trend naraščanja/padanja...
#plot(rownames(sharp), sharp[,8], type="l")
#profit, če investiramo vsako obdobje v 5 delnic z najvišjim sharpom
proba <- (trade[-(1:3)])
proba <- proba[-(6:length(proba[1,]))] #investiramo v 5 delnic
profit.skupen <- 0
for (j in 1:length(proba[1,])) {
for (i in 1:(length(proba[,1])-1)) {
profit.skupen <- profit.skupen * ((cene[dnevi+n+1+n*(i),proba[i,j]]-cene[dnevi+n+1+n*(i-1),proba[i,j]])/cene[dnevi+n+1+n*(i-1),proba[i,j]])+1
}
}
#profiti vsake strategije posebej (profit(i) označuje profit, če investiramo v i-to sharpovo največjo delnico)
profit1 <- 0
profit2 <- 0
profit3 <- 0
profit4 <- 0
profit5 <- 0
for (i in 1:(length(proba[,1])-1)) {
profit1 <- profit1 * ((cene[dnevi+n+1+n*(i),proba[i,1]]-cene[dnevi+n+1+n*(i-1),proba[i,1]])/cene[dnevi+n+1+n*(i-1),proba[i,1]])+1
}
for (i in 1:(length(proba[,1])-1)) {
profit2 <- profit2 * ((cene[dnevi+n+1+n*(i),proba[i,2]]-cene[dnevi+n+1+n*(i-1),proba[i,2]])/cene[dnevi+n+1+n*(i-1),proba[i,2]])+1
}
for (i in 1:(length(proba[,1])-1)) {
profit3 <- profit3 * ((cene[dnevi+n+1+n*(i),proba[i,3]]-cene[dnevi+n+1+n*(i-1),proba[i,3]])/cene[dnevi+n+1+n*(i-1),proba[i,3]])+1
}
for (i in 1:(length(proba[,1])-1)) {
profit4<- profit4 *((cene[dnevi+n+1+n*(i),proba[i,4]]-cene[dnevi+n+1+n*(i-1),proba[i,4]])/cene[dnevi+n+1+n*(i-1),proba[i,4]])+1
}
for (i in 1:(length(proba[,1])-1)) {
profit5 <- profit5 * ((cene[dnevi+n+1+n*(i),proba[i,5]]-cene[dnevi+n+1+n*(i-1),proba[i,5]])/cene[dnevi+n+1+n*(i-1),proba[i,5]])+1
}
profit.skupen
profit1
profit2
profit3
profit4
profit5
profit.skupen-1
profit1-1
profit2-1
profit3-1
profit4-1
profit5-1
n <- 30
delez <- seq(1/n,1, 1/n) #da bomo vzeli tehtano povprečje sharpov z večjo težo na čim kasnejših sharpih
invest <- sharp
invest[is.na(invest)] <- 0
for (j in 4:(length(sharp[1,])-1)) { #do -1, ker zadnji stolpec je benchmark!
k <- 1
while (invest[k,j] == 0) { #začnemo pri tistem k-ju, ko delnica začne kotirati na borzi
k <- k+1
}
for (i in (k+n):length(sharp[,1])) {
invest[i,j] <- mean(sharp[(i-(n-1)):i,j]*delez)
}
for (i in 1:(k+n-1)) {invest[i,j] <- NA}
}
invest <- invest[(n+1):length(invest[,1]),] #izbrišem prvih n vrstic, kjer ni izračuna
#write.csv2(invest,file="C:/zan/faks/opb/ODP/invest.csv") #tabela povprečnih sharpovih vrednosti desetih prejšnjih dni
#prikažem samo tiste sharpove, pri katerih trejdam
trade <- invest[seq(1, length(invest[,1]), n), ]
trade[is.na(trade)] <- -Inf #tiste, ki še ne kotirajo, sem dal na -inf, da jih prikaže na zadnjem mestu po velikosti sharpa
trade <- trade[,-length(trade[1,])] #izbrišem benchmark
#razpredelnica, kam naj investiram v določenih datumih
for (i in 1:length(trade[,1])) {
trade[i,4:length(trade[1,])] <- colnames(tail(sort(trade[i,4:length(trade[1,])])))
}
colnames(trade) <- c("leto", "mesec", "dan", seq(length(trade[1,])-3, 1, -1))
trade <- trade[,c(1,2,3,length(trade[1,]):4)] #tak vrstni red, kot hočem - 1 pomeni največji sharpov
#write.csv2(trade,file="C:/zan/faks/opb/ODP/trade.csv") #tabela delnic, ki padajo po sharpovih vrednostih
#lahko bi še pogledal, kakšne standardne odklone imajo sharpove in ali je trend naraščanja/padanja...
#plot(rownames(sharp), sharp[,8], type="l")
#profit, če investiramo vsako obdobje v 5 delnic z najvišjim sharpom
proba <- (trade[-(1:3)])
proba <- proba[-(6:length(proba[1,]))] #investiramo v 5 delnic
profit.skupen <- 0
for (j in 1:length(proba[1,])) {
for (i in 1:(length(proba[,1])-1)) {
profit.skupen <- profit.skupen * ((cene[dnevi+n+1+n*(i),proba[i,j]]-cene[dnevi+n+1+n*(i-1),proba[i,j]])/cene[dnevi+n+1+n*(i-1),proba[i,j]])+1
}
}
#profiti vsake strategije posebej (profit(i) označuje profit, če investiramo v i-to sharpovo največjo delnico)
profit1 <- 0
profit2 <- 0
profit3 <- 0
profit4 <- 0
profit5 <- 0
for (i in 1:(length(proba[,1])-1)) {
profit1 <- profit1 * ((cene[dnevi+n+1+n*(i),proba[i,1]]-cene[dnevi+n+1+n*(i-1),proba[i,1]])/cene[dnevi+n+1+n*(i-1),proba[i,1]])+1
}
for (i in 1:(length(proba[,1])-1)) {
profit2 <- profit2 * ((cene[dnevi+n+1+n*(i),proba[i,2]]-cene[dnevi+n+1+n*(i-1),proba[i,2]])/cene[dnevi+n+1+n*(i-1),proba[i,2]])+1
}
for (i in 1:(length(proba[,1])-1)) {
profit3 <- profit3 * ((cene[dnevi+n+1+n*(i),proba[i,3]]-cene[dnevi+n+1+n*(i-1),proba[i,3]])/cene[dnevi+n+1+n*(i-1),proba[i,3]])+1
}
for (i in 1:(length(proba[,1])-1)) {
profit4<- profit4 *((cene[dnevi+n+1+n*(i),proba[i,4]]-cene[dnevi+n+1+n*(i-1),proba[i,4]])/cene[dnevi+n+1+n*(i-1),proba[i,4]])+1
}
for (i in 1:(length(proba[,1])-1)) {
profit5 <- profit5 * ((cene[dnevi+n+1+n*(i),proba[i,5]]-cene[dnevi+n+1+n*(i-1),proba[i,5]])/cene[dnevi+n+1+n*(i-1),proba[i,5]])+1
}
profit.skupen-1
profit1-1
profit2-1
profit3-1
profit4-1
profit5-1
