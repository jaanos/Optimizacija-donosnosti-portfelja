source('U:/opb/ODP/tabele_delnic.R')
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8')
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8')
delnice <- read.csv2(file="U:\opb\ODP\delnice.csv", header = TRUE, fileEncoding = "Windows-1250")
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8')
View(tabela1_cene)
View(tabela2_spremembe)
View(tabela3_sharpe)
View(trade)
View(imena)
tabela1_cene <- tabela1_cene[seq(1, length(tabela1_cene[,1]), n), ]
View(tabela1_cene)
n <- 1
delez <- seq(1/n,1, 1/n) #da bomo vzeli tehtano povprečje sharpov z večjo težo na čim kasnejših sharpih
invest <- sharp
invest[is.na(invest)] <- 0
for (j in 1:(length(sharp[1,])-1)) { #do -1, ker zadnji stolpec je benchmark!
k <- 1
while (invest[k,j] == 0) { #začnemo pri tistem k-ju, ko delnica začne kotirati na borzi
k <- k+1
}
for (i in (k+n):length(sharp[,1])) {
invest[i,j] <- mean(sharp[(i-(n-1)):i,j]*delez)
}
for (i in 1:(k+n-1)) {invest[i,j] <- NA}
}
invest <- invest[(n+1):length(invest[,1]),] #izbrišem prvih n vrstic, kjer ni izračuna
View(invest)
invest <- invest[(n+1):length(invest[,1]),] #izbrišem prvih n vrstic, kjer ni izračuna
View(invest)
n <- 1
delez <- seq(1/n,1, 1/n) #da bomo vzeli tehtano povprečje sharpov z večjo težo na čim kasnejših sharpih
invest <- sharp
invest[is.na(invest)] <- 0
for (j in 1:(length(sharp[1,])-1)) { #do -1, ker zadnji stolpec je benchmark!
k <- 1
while (invest[k,j] == 0) { #začnemo pri tistem k-ju, ko delnica začne kotirati na borzi
k <- k+1
}
for (i in (k+n):length(sharp[,1])) {
invest[i,j] <- mean(sharp[(i-(n-1)):i,j]*delez)
}
for (i in 1:(k+n-1)) {invest[i,j] <- NA}
}
invest <- invest[(n+1):length(invest[,1]),] #izbrišem prvih n vrstic, kjer ni izračuna
#write.csv2(invest,file="C:/zan/faks/opb/ODP/invest.csv") #tabela povprečnih sharpovi
View(invest)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8')
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8')
View(cene)
View(invest)
View(koncna)
View(trade)
View(tabela1_cene)
View(tabela2_spremembe)
View(tabela3_sharpe)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8')
View(tabela2_spremembe)
View(tabela1_cene)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8')
View(tabela1_cene)
View(tabela2_spremembe)
View(tabela3_sharpe)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8')
View(tabela1_cene)
View(tabela2_spremembe)
View(tabela3_sharpe)
rownames(delnice)
delnice$3
View(delnice)
delnice$AAPL
plot(rownames(delnice), delnice$AAPL)
plot(seq(1,length(delnice[,1]), 1), delnice$AAPL)
plot(seq(1,length(delnice[,1]), 1), delnice$AAPL, type="l")
plot(seq(1,length(delnice[,1]), 1), cene$AAPL, type="l")
View(delnice)
dim(cene)
dim(cene)[1]
View(delnice)
View(cene)
View(delnice)
krivulja <- cene
for (j in 1:((length(delnice[1,])))) {
i <- length(delnice[,1])
while (i>1 & delnice[i,j] != 0) {
i <- i-1
}
for (k in i:length(delnice[,1])) {
krivulja[k,j] <- delnice[k,j]/delnice[i,j]
}
}
View(krivulja)
plot(seq(1,length(delnice[,1]), 1), krivulja$AAPL, type="l")
plot(seq(1,length(delnice[,1]), 1), delnice$AAPL, type="l")
plot(seq(1,length(delnice[,1]), 1), delnice$AAPL, type="l")
plot(seq(1,length(delnice[,1]), 1), cene$AAPL, type="l")
plot(seq(1,length(delnice[,1]), 1), krivulja$AAPL, type="l")
plot(seq(1,length(delnice[,1]), 1), cene$AAPL, type="l")
plot(seq(1,length(delnice[,1]), 1), krivulja$AAPL, type="l")
krivulja <- cene
for (j in 1:((length(delnice[1,])))) {
i <- length(delnice[,1])
while (i>1 & delnice[i,j] != 0) {
i <- i-1
}
for (k in i:length(delnice[,1])) {
krivulja[k,j] <- delnice[k,j]/delnice[i,j]
}
}
plot(seq(1,length(delnice[,1]), 1), krivulja$AAPL, type="l")
krivulja <- cene
prva <- cene[1,]
for(i in 1:dim(cene)[1]){
for (j in 1:dim(cene)[2]){
krivulja[i,j] <- krivulja[prva[j]]
}
}
prva
class(prva)
as.list(prva)
krivulja <- cene
for (j in 1:((length(delnice[1,])))) {
i <- length(delnice[,1])
while (i>1 & delnice[i,j] != 0) {
i <- i-1
}
for (k in i:length(delnice[,1])) {
krivulja[k,j] <- delnice[k,j]/delnice[1,j]
}
}
plot(seq(1,length(delnice[,1]), 1), krivulja$AAPL, type="l")
krivulja <- cene
for (j in 1:((length(delnice[1,])))) {
i <- length(delnice[,1])
while (i>1 & delnice[i,j] != 0) {
i <- i-1
}
for (k in i:length(delnice[,1])) {
krivulja[k,j] <- cene[k,j]/cene[i,j]
}
}
plot(seq(1,length(delnice[,1]), 1), krivulja$AAPL, type="l")
View(krivulja)
lines(krivulja$AXP)
lines(krivulja$GS)
View(krivulja)
write.csv2(krivulja,file="U:/opb/ODP/krivulja.csv")
