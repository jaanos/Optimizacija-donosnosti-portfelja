source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
View(trade)
View(koncna)
View(delnice)
source('~/.active-rstudio-document', echo=TRUE)
View(sk)
GSPC[,]
View(trade)
View(koncna)
View(koncna)
View(invest)
DJIA
DJIA[,6]
imena
tabela
View(imena)
XOM
XOM[1,]
XOM[1,6]
tabela
imena
?levels
imena <- tabela$Symbol
imena
imena <- levels(imena)
imena
getSymbols("GSPC", from = datum)
getSymbols("aapl", from = datum)
GSPC[,]
GSPC[1,]
source('~/.active-rstudio-document', echo=TRUE)
View(sk)
sk$GSPC
skupaj
sk
skupaj
View(skupaj)
View(sk)
sk[1,]
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/zan/faks/opb/ODP/uvozDJIA.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(quantmod)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(quantmod)
tabela <- read.csv2("DJIA.csv",header=TRUE,fileEncoding="Windows-1250")
imena <- tabela$Symbol
imena <- levels(imena)
datum <- "2010-01-01"
getSymbols(imena,from=datum)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
View(delnice)
start.time <- Sys.time()
delnice <- read.csv2(file="C:/zan/faks/opb/ODP/delnice.csv", header = TRUE, fileEncoding = "Windows-1250")
rownames(delnice)<- delnice[,1]
delnice[,1] <- NULL
View(delnice)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
delnice <- read.csv2(file="C:/zan/faks/opb/ODP/delnice.csv", header = TRUE, fileEncoding = "Windows-1250")
rownames(delnice)<- delnice[,1]
delnice[,1] <- NULL
View(delnice)
delnice[is.na(delnice)] <- 0
cene <- delnice
for (j in 1:((length(delnice[1,])))) { #4, ker imamo še stolpec leto, mesec, dan
i <- length(delnice[,1])
while (i>1 & delnice[i,j] != 0) {
delnice[i,j] <- delnice[i,j]/delnice[i-1,j]
i <- i-1
}
if (delnice[i,j]==0) {
delnice[i+1,j] <- 1
}
else {delnice[i,j] <- 1}
}
View(delnice)
dnevi <- 30 #koliko dnevni sharpov index računamo
sharp <- delnice
sharp <- delnice
for (j in 1:(length(delnice[1,])-1)) { #do -1, ker zadnji stolpec je benchmark!
k <- 1
while (delnice[k,j] == 0) { #začnemo pri tistem k-ju, ko delnica začne kotirati na borzi
k <- k+1
}
for (i in (k+dnevi):length(delnice[,1])) {
sharp[i,j] <- mean(delnice[(i-(dnevi-1)):i,j]-delnice[(i-(dnevi-1)):i,length(delnice[1,])])/sd(delnice[(i-(dnevi-1)):i,j]-delnice[(i-(dnevi-1)):i,length(delnice[1,])]) #length(delnice[1,]), ker zadnji stolpec je benchmark
}
for (i in 1:(k+dnevi-1)) {sharp[i,j] <- NA}
}
View(sharp)
sharp <- sharp[(dnevi+1):length(sharp[,1]),] #zbrišem prvih 90 vrstic, kjer sharpov ni izračunan
n <- 20
delez <- seq(1/n,1, 1/n) #da bomo vzeli tehtano povprečje sharpov z večjo težo na čim kasnejših sharpih
invest <- sharp
invest[is.na(invest)] <- 0
for (j in 1:(length(sharp[1,])-1)) { #do -1, ker zadnji stolpec je benchmark!
k <- 1
while (invest[k,j] == 0) { #začnemo pri tistem k-ju, ko delnica začne kotirati na borzi
k <- k+1
}
for (i in (k+n):length(sharp[,1])) {
invest[i,j] <- mean(sharp[(i-(n-1)):i,j]*delez)
}
for (i in 1:(k+n-1)) {invest[i,j] <- NA}
}
invest <- invest[(n+1):length(invest[,1]),] #izbrišem prvih n vrstic, kjer ni izračuna
View(invest)
trade <- invest[seq(1, length(invest[,1]), n), ]
trade[is.na(trade)] <- -Inf #tiste, ki še ne kotirajo, sem dal na -inf, da jih prikaže na zadnjem mestu po velikosti sharpa
trade <- trade[,-length(trade[1,])] #izbrišem benchmark
imena <- trade
#razpredelnica, kam naj investiram v določenih datumih
for (i in 1:length(trade[,1])) {
trade[i,1:length(trade[1,])] <- ((sort(trade[i,1:length(trade[1,])]))) #razvrstimo jih po velikosti sharpove
}
View(trade)
y <- c()
for (i in 1:length(trade[,1])) {
y <- rbind(y,match(trade[i,1:length(trade[1,])], imena[i,1:length(trade[1,])]))
}
View(y)
vektor <- c((colnames(imena)))
for (j in 1:length(y[1,])) {
for (i in 1:length(y[,1])) {
y[i,j] <- vektor[as.numeric(y[i,j])]
}
}
View(y)
View(trade)
trade[,-(4:length(trade[1,]))]
trade[,]
View(y)
colnames(koncna) <- c("datum", seq(length(trade[1,])-3, 1, -1))
View(koncna)
y <- c()
for (i in 1:length(trade[,1])) {
y <- rbind(y,match(trade[i,1:length(trade[1,])], imena[i,1:length(trade[1,])]))
}
#vektor column namesov
vektor <- c((colnames(imena)))
#zamenjamo številke za column namese
for (j in 1:length(y[1,])) {
for (i in 1:length(y[,1])) {
y[i,j] <- vektor[as.numeric(y[i,j])]
}
}
View(y)
View(trade)
rownames(y)<- rownames(trade)
View(y)
colnames(koncna) <- c(seq(length(trade[1,]), 1, -1))
View(y)
colnames(y) <- c(seq(length(trade[1,]), 1, -1))
View(y)
koncna <- y[,c(1,2,3,length(y[1,]):4)] #tak vrstni red, kot hočem - 1 pomeni največji sharpov
View(koncna)
View(y)
koncna <- y[,c(length(y[1,]):1)] #tak vrstni red, kot hočem - 1 pomeni največji sharpov
View(koncna)
y[1,]
y[1,c(3,2,1)]
y[1,3,2,1]
View(sharp)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
View(delnice)
View(cene)
View(sharp)
tabela1_cene <- cene[(dnevi+1):length(cene[,1]),]
View(tabela1_cene)
View(cene)
View(delnice)
View(sharp)
tabela2_spremembe <- delnice[(dnevi+1):length(delnice[,1]),]
tabela3_sharpe <- sharp[(dnevi+1):length(sharp[,1]),]
View(tabela1_cene)
View(tabela2_spremembe)
View(tabela3_sharpe)
length(delnice[(dnevi+1):length(delnice[,1]),])
length(delnice[(dnevi):length(delnice[,1]),])
length(delnice[(dnevi):length(delnice[,1]),])
hranimo
write.csv2(tabela1_cene,file="C:/zan/faks/opb/ODP/tabela1_cene.csv")
write.csv2(tabela2_spremembe,file="C:/zan/faks/opb/ODP/tabela2_spremembe.csv")
write.csv2(tabela3_sharpe,file="C:/zan/faks/opb/ODP/tabela3_sharpe.csv")
tabela1_cene <- tabela1_cene[c(1:length(tabela1_cene)-1)]
View(tabela1_cene)
tabela2_spremembe <- tabela2_spremembe[c(1:length(tabela2_spremembe)-1)]
View(tabela2_spremembe)
tabela3_sharpe <- tabela3_sharpe[c(1:length(tabela3_sharpe)-1)]
#shranimo
write.csv2(tabela1_cene,file="C:/zan/faks/opb/ODP/tabela1_cene.csv")
write.csv2(tabela2_spremembe,file="C:/zan/faks/opb/ODP/tabela2_spremembe.csv")
write.csv2(tabela3_sharpe,file="C:/zan/faks/opb/ODP/tabela3_sharpe.csv")
